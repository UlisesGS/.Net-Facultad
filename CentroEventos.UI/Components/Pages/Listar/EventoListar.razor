@page "/evento-listar"

@rendermode InteractiveServer
@using CentroEventos.Aplicacion
@using CentroEventos.Aplicacion.Entidades
@using CentroEventos.Aplicacion.CasosDeUsos.Evento
@using CentroEventos.UI.Components.Pages.Crear
@using CentroEventos.Aplicacion.Enums
@inject ServicioLogin Login
@inject EventoDeportivoBuscarPorIdUseCase BuscarId
@inject EventoDeportivoListarUseCase Listar
@inject ListarEventosConCupoDisponibleUseCase ListarEventosConCupoDisponible
@inject ListarAsistenciaAEventoUseCase ListarAsistenciaAEvento
@inject EventoDeportivoBajaUseCase Baja
@inject NavigationManager Navigation


@if(!mostrarConCupo)
{
    <div class="bg-personas-header rounded p-3">
        <div class="d-flex align-items-start flex-column flex-md-row gap-3 mb-3">
            <h4 class="m-0 text-white p-2">Listado de Eventos</h4>
            @if(!permisoAlta)
            {
                <button type="button" class="btn btn-success mt-2" disabled>
                    <i class="bi bi-plus-circle me-1"></i> Crear Evento
                </button>
            }
            else
            {
                <button type="button" class="btn btn-success mt-2" @onclick="() => mostrarModalCrear = true">
                    <i class="bi bi-plus-circle me-1"></i> Crear Evento
                </button>
            }
            @if(eventos.Any())
            {
                <button type="button" class="btn btn-warning mt-2" @onclick="MostrarListaCupo">
                    <i class="bi bi-list-columns-reverse me-1"></i> Filtrar Cupo Disponible
                </button>
            }
        </div>
        <div class="table-responsive">
            
                    @if(eventos.Any())
                    {
                        <table class="table table-striped">
                            <thead class="thead-custom">
                                <tr>
                                    <th>ID</th>
                                    <th>Responsable</th>
                                    <th>Cupo maximo</th>
                                    <th>Fecha inicio</th>
                                    <th>Duracion horas</th>
                                    <th>Nombre</th>
                                    <th>Lista Asistencia</th>
                                    <th>Descripcion</th>
                                    <th>Acción</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var evento in eventos)
                                {
                                    <tr>
                                        <td>@evento.Id</td>
                                        <td>@evento.ResponsableId</td>
                                        <td>@evento.CupoMaximo</td>
                                        <td>@evento.FechaHoraInicio</td>
                                        <td>@evento.DuracionHoras</td>
                                        <td>@evento.Nombre</td>
                                        <td>
                                            @if(MostrarListaBool(evento.FechaHoraInicio,evento.DuracionHoras))
                                            {
                                                <button type="button" class="btn btn-warning btn-sm me-1" @onclick="() => AbrirListaAsistencia(evento.Id)">
                                                    <i class="bi bi-list"></i>
                                                </button>
                                            }
                                            else
                                            {
                                                <button type="button" class="btn btn-warning btn-sm me-1" disabled>
                                                    <i class="bi bi-list"></i>
                                                </button>
                                            }
                                        </td>
                                        <td>
                                            <button type="button" class="btn btn-warning btn-sm me-1" @onclick="() => AbrirDescripcion(evento.Descripcion)">
                                                Ver Descripcion
                                                <i class="bi bi-question-circle ms-2"></i>
                                            </button>
                                        </td>
                                        <td>
                                            @if(!permisoModificar)
                                            {
                                                <button type="button" class="btn btn-primary btn-sm me-1" disabled>
                                                    <i class="bi bi-pencil-square"></i>
                                                </button>
                                            }
                                            else
                                            {
                                                <button type="button" class="btn btn-primary btn-sm me-1" @onclick="() => AbrirModalModificar(evento.Id)">
                                                    <i class="bi bi-pencil-square"></i>
                                                </button>
                                            }
                                            @if(!permisoBaja)
                                            {
                                                <button type="button" class="btn btn-danger btn-sm" disabled>
                                                    <i class="bi bi-trash3"></i>
                                                </button>
                                            }
                                            else
                                            {
                                                <button type="button" class="btn btn-danger btn-sm" @onclick="() => AbrirModalEliminar(evento)">
                                                    <i class="bi bi-trash3"></i>
                                                </button>
                                            }
                                    </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <h2 class="text-white">No hay eventos creados</h2>
                    }
                
        </div>
    </div>
}
else
{
    <div class="bg-personas-header rounded p-3">
        <div class="d-flex align-items-start flex-column flex-md-row gap-3 mb-3">
            <h4 class="m-0 text-white p-2">Listado de Eventos</h4>
            @if(!permisoAlta)
            {
                <button type="button" class="btn btn-success mt-2" disabled>
                    <i class="bi bi-plus-circle me-1"></i> Crear Evento
                </button>
            }
            else
            {
                <button type="button" class="btn btn-success mt-2" @onclick="() => mostrarModalCrear = true">
                    <i class="bi bi-plus-circle me-1"></i> Crear Evento
                </button>
            }
            <button type="button" class="btn btn-warning mt-2" @onclick="CerrarMostrarListaCupo">
                <i class="bi bi-list-columns-reverse me-1"></i> Filtrar Todo
            </button>
        </div>
        <div class="table-responsive">
            <table class="table table-striped">
                <thead class="thead-custom">
                    <tr>
                        <th>ID</th>
                        <th>Responsable</th>
                        <th>Cupo maximo</th>
                        <th>Fecha inicio</th>
                        <th>Duracion horas</th>
                        <th>Nombre</th>
                        <th>Lista Asistencia</th>
                        <th>Descripcion</th>
                        <th>Acción</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var evento in eventos)
                    {
                        <tr>
                            <td>@evento.Id</td>
                            <td>@evento.ResponsableId</td>
                            <td>@evento.CupoMaximo</td>
                            <td>@evento.FechaHoraInicio</td>
                            <td>@evento.DuracionHoras</td>
                            <td>@evento.Nombre</td>
                            <td>
                                @if(MostrarListaBool(evento.FechaHoraInicio,evento.DuracionHoras))
                                {
                                    <button type="button" class="btn btn-warning btn-sm me-1" @onclick="() => AbrirListaAsistencia(evento.Id)">
                                        <i class="bi bi-list"></i>
                                    </button>
                                }
                                else
                                {
                                    <button type="button" class="btn btn-warning btn-sm me-1" disabled>
                                        <i class="bi bi-list"></i>
                                    </button>
                                }
                            </td>
                            <td>
                                <button type="button" class="btn btn-warning btn-sm me-1" @onclick="() => AbrirDescripcion(evento.Descripcion)">
                                    Ver Descripcion
                                    <i class="bi bi-question-circle ms-2"></i>
                                </button>
                            </td>
                            <td>
                                @if(!permisoModificar)
                                {
                                    <button type="button" class="btn btn-primary btn-sm me-1" disabled>
                                        <i class="bi bi-pencil-square"></i>
                                    </button>
                                }
                                else
                                {
                                    <button type="button" class="btn btn-primary btn-sm me-1" @onclick="() => AbrirModalModificar(evento.Id)">
                                        <i class="bi bi-pencil-square"></i>
                                    </button>
                                }
                                @if(!permisoBaja)
                                {
                                    <button type="button" class="btn btn-danger btn-sm" disabled>
                                        <i class="bi bi-trash3"></i>
                                    </button>
                                }
                                else
                                {
                                    <button type="button" class="btn btn-danger btn-sm" @onclick="() => AbrirModalEliminar(evento)">
                                        <i class="bi bi-trash3"></i>
                                    </button>
                                }
                        </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}


@if (mostrarModalLista)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5); z-index: 1050;">
        <div class="modal-dialog">
            <div class="modal-content formulario-wrapper formulario-con-borde text-dark">
                <div class="modal-header form-header">
                    <button type="button" class="btn-close" @onclick="CerrarModalListaAsistencia"></button>
                </div>
                <div class="modal-body text-white">
                    <textarea class="form-control" readonly rows="10" style="resize: none; overflow-y: scroll; white-space: pre-wrap;">
                        @PersonasEnTexto
                    </textarea>
                </div>
                <div class="modal-footer bg-footer">
                    <button class="btn btn-danger" @onclick="CerrarModalListaAsistencia">Cerrar</button>
                </div>
            </div>
        </div>
    </div>
}

@if (mostrarModalDescripcion)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5); z-index: 1050;">
        <div class="modal-dialog">
            <div class="modal-content formulario-wrapper formulario-con-borde text-dark">
                <div class="modal-header form-header">
                    <h5 class="modal-title">Descripción completa</h5>
                    <button type="button" class="btn-close" @onclick="CerrarModalDescripcion"></button>
                </div>
                <div class="modal-body text-white" style="overflow-y: auto;">
                    <textarea class="form-control" readonly rows="10" style="resize: none;">@descripcionSeleccionada</textarea>
                </div>
                <div class="modal-footer bg-footer">
                    <button class="btn btn-danger" @onclick="CerrarModalDescripcion">Cerrar</button>
                </div>
            </div>
        </div>
    </div>
}

@if (mostrarModalCrear)
{
    <EventoCrear Mostrar="@mostrarModalCrear" OnClose="CerrarModalCrear" />
}

@if (mostrarModalModificar && eventoSeleccionado != null)
{
    <EventoCrear Mostrar="@mostrarModalModificar" eventoAux="@eventoSeleccionado" OnClose="CerrarModalModificar" />
}

@if (mostrarModalEliminar && eventoSeleccionado != null)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5); z-index: 1050;">
        <div class="modal-dialog">
            <div class="modal-content formulario-wrapper formulario-con-borde text-dark">
                <div class="modal-header form-header">
                    <h5 class="modal-title">Confirmar eliminación</h5>
                    <button type="button" class="btn-close" @onclick="CancelarEliminar"></button>
                </div>
                <div class="modal-body text-white">
                    <p>¿Estás seguro que querés eliminar a <strong>@eventoSeleccionado.Nombre</strong>?</p>
                    @if (!string.IsNullOrEmpty(errorEliminar))
                    {
                        <div class="alert alert-danger mt-3" role="alert">
                            @errorEliminar
                        </div>
                    }
                </div>
                <div class="modal-footer bg-footer">
                    <button class="btn btn-secondary" @onclick="CancelarEliminar">Cancelar</button>
                    <button class="btn btn-danger" @onclick="ConfirmarEliminar">Eliminar</button>
                </div>
            </div>
        </div>
    </div>
}
    


<style>
.descripcion-celda {
    max-width: 200px; /* Ajustalo como quieras */
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.bg-personas-header {
    background-color: #1c2a29;
}

.thead-custom {
    background-color: #478689 ;
}

.thead-custom th {
    background-color: #478689 ;
}
.formulario-wrapper {
    max-width: 600px;
    width: 100%;
}

.formulario-con-borde {
    background: linear-gradient(to bottom, #1c2a29, #305861);
    box-shadow: 0 0 10px rgba(0,0,0,0.2);
    border-radius: 20px;
    overflow: hidden;
}

.formulario-con-borde .form-label {
    color: white;
}

.borde-personalizado {
    border: 2px solid #1c2a29 ;
    border-radius: 12px;
}

/* Header del formulario */
.form-header {
    background-color: #478689;
    color: white;
}

/* Footer de botones */
.bg-footer {
    background-color: #478689;
    color: white;
}
</style>

@code {

    private List<Persona> personas = new();
    private List<EventoDeportivo> eventos = new();
    private EventoDeportivo? eventoSeleccionado;
    private int idAux;
    private bool mostrarConCupo=false;
    private int idLog = 0;
    private bool mostrarModalCrear = false;
    private bool mostrarModalModificar = false;
    private bool mostrarModalEliminar = false;
    private bool primerRender = true;
    private bool permisoAlta = false;
    private bool permisoBaja = false;
    private bool permisoModificar = false;
    private bool mostrarModalDescripcion = false;
    private bool mostrarModalLista = false;
    private string descripcionSeleccionada = string.Empty;
    private string? errorEliminar = null;
    protected override async Task OnAfterRenderAsync(bool Render)
    {

        if (primerRender)
        {
            await Task.Delay(10);
            primerRender = false;

            var user = Login.GetUser();

            if (user == null)
            {
                Navigation.NavigateTo("/", true);
                return;
            }
            idLog = user.Id;
            foreach(EnumPermiso enumPermiso in user.Permisos)
            {
                if(enumPermiso == EnumPermiso.EventoAlta)
                {
                    permisoAlta = true;
                }
                else if(enumPermiso == EnumPermiso.EventoBaja)
                {
                    permisoBaja = true;
                }
                else if(enumPermiso == EnumPermiso.EventoModificacion)
                {
                    permisoModificar = true;
                }
            }
            eventos = Listar.Ejecutar();
            StateHasChanged();
        }
    
    }

    private void MostrarListaCupo()
    {
        eventos.Clear();
        eventos = ListarEventosConCupoDisponible.Ejecutar();
        mostrarConCupo=true;

    }

    private void CerrarMostrarListaCupo()
    {
        eventos.Clear();
        eventos = Listar.Ejecutar();
        mostrarConCupo=false;

    }

    private bool MostrarListaBool(DateTime FechaHoraInicio, double DuracionHoras)
    {
        if(FechaHoraInicio.AddHours(DuracionHoras)<DateTime.Now)
        {
            return true;
        }
        return false;
    }
    
    private void AbrirModalModificar(int id)
    {
        var e = BuscarId.Ejecutar(id);
        eventoSeleccionado = new EventoDeportivo
        {
            Id = e.Id,
            ResponsableId = e.ResponsableId,
            CupoMaximo = e.CupoMaximo,
            FechaHoraInicio = e.FechaHoraInicio,
            DuracionHoras = e.DuracionHoras,
            Nombre = e.Nombre,
            Descripcion = e.Descripcion
        };
        mostrarModalModificar = true;
    }

    private void AbrirModalEliminar(EventoDeportivo evento)
    {
        eventoSeleccionado = evento;
        mostrarModalEliminar = true;
    }

    private void CancelarEliminar()
    {
        mostrarModalEliminar = false;
        eventoSeleccionado = null;
        errorEliminar = null;
    }

    private void ConfirmarEliminar()
    {
        errorEliminar = null; 
        try
        {
            var user = Login.GetUser();
            if (eventoSeleccionado != null)
            {
                Baja.Ejecutar(eventoSeleccionado.Id, user.Id);
                eventos.RemoveAll(p => p.Id == eventoSeleccionado.Id);

                mostrarModalEliminar = false;
                eventoSeleccionado=null;
            }
        }
        catch (Exception ex)
        {
            errorEliminar = $"Error al eliminar: {ex.Message}";
            Console.WriteLine($"ERROR: {ex.Message}");
        }
    }

    private Task CerrarModalCrear()
    {
        mostrarModalCrear = false;
        eventos = Listar.Ejecutar();
        return Task.CompletedTask;
    }

    private Task CerrarModalModificar()
    {
        mostrarModalModificar = false;
        eventos = Listar.Ejecutar();
        return Task.CompletedTask;
    }

    private void AbrirDescripcion(string descripcion)
    {
        descripcionSeleccionada = descripcion;
        mostrarModalDescripcion = true;
    }

    private void CerrarModalDescripcion()
    {
        mostrarModalDescripcion = false;
        descripcionSeleccionada = string.Empty;
    }

    private string PersonasEnTexto => personas == null ? "" : string.Join("\n", personas.Select(p => $"{p.Nombre} {p.Apellido}"));
    private void AbrirListaAsistencia(int id)
    {
        personas = ListarAsistenciaAEvento.Ejecutar(id);
        idAux = id;
        mostrarModalLista = true;
    }

    private void CerrarModalListaAsistencia()
    {
        mostrarModalLista = false;
        idAux = 0;
    }
}