@page "/usuario-listar"
@rendermode InteractiveServer
@using CentroEventos.Aplicacion
@inject UsuarioListarUseCase Listar
@inject ServicioAutorizacion ServicioAutorizacion

@using CentroEventos.Aplicacion.Enums
@inject ServicioLogin Login
@inject NavigationManager Navigation

<div class="bg-personas-header rounded p-3">
    <div class="d-flex align-items-start flex-column flex-md-row gap-3 mb-3">
        <h4 class="m-0 text-white p-2">Listado de Usuarios</h4>
    </div>


    <div class="table-responsive">
        <table class="table table-striped">
            <thead class="thead-custom">
                <tr>
                    <th>ID</th>
                    <th>Nombre</th>
                    <th>Apellido</th>
                    <th>Email</th>
                    <th>Acci√≥n</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var usuario in usuarios)
                {
                    <tr>
                        <td>@usuario.Id</td>
                        <td>@usuario.Nombre</td>
                        <td>@usuario.Apellido</td>
                        <td>@usuario.Email</td>
                        <td>
                            <button type="button" class="btn btn-primary btn-sm me-1" @onclick="() => Modificar(usuario.Id)">
                                <i class="bi bi-pencil-square"></i>
                            </button>
                            <button type="button" class="btn btn-danger btn-sm" @onclick="() => Modificar(usuario.Id)">
                                <i class="bi bi-archive"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


<style>
.bg-personas-header {
    background-color: #1c2a29;
}

.thead-custom {
    background-color: #478689 ;
}

.thead-custom th {
    background-color: #478689 ;
    color: white ;
}


</style>

@code {
    private List<Usuario> usuarios = new();



    private bool primerRender = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        
        if (primerRender)
        {
            await Task.Delay(10);
            primerRender = false;

            var user = Login.GetUser();

            if (user == null)
            {
                Navigation.NavigateTo("/", true);
                return;
            }
            usuarios = Listar.Ejecutar();
            StateHasChanged();
        }
    }

    private void Modificar(int id)
    {
        Navigation.NavigateTo($"/usuario-modificar/{id}");
    }
    
    private void Eliminar(int id)
    {
        
    }
    
}
